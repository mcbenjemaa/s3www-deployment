apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "s3www.fullname" . }}
  labels:
    {{- include "s3www.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "s3www.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "s3www.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "s3www.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: init-download-file
          image: curlimages/curl
          command:
            - sh
            - -c
            - |
              curl --fail -o /data/file-to-serve {{ .Values.fileToServeUrl | quote }} &&
              [ -s /data/file-to-serve ] || (echo "File download failed" && exit 1)
          volumeMounts:
            - name: shared-data
              mountPath: /data
        - name: init-upload-file
          image: minio/mc:latest
          command:
            - /bin/sh
            - -c
            - |
              TIMEOUT={{ .Values.upload.timeout | default 60 }}
              ATTEMPTS=0
              MAX_ATTEMPTS={{ .Values.upload.maxAttempts | default 12 }}
              until ./bin/mc alias set minio $S3WWW_ENDPOINT $S3WWW_ACCESS_KEY $S3WWW_SECRET_KEY || [ $ATTEMPTS -ge $MAX_ATTEMPTS ]; do
                echo "Retrying mc alias set ($ATTEMPTS/$MAX_ATTEMPTS)..."
                sleep 5
                ATTEMPTS=$((ATTEMPTS + 1))
              done
              [ $ATTEMPTS -lt $MAX_ATTEMPTS ] || (echo "mc alias set failed after $TIMEOUT seconds" && exit 1)

              # mc alias set minio $S3WWW_ENDPOINT $S3WWW_ACCESS_KEY $S3WWW_SECRET_KEY ||
              # (echo "mc alias set failed" && exit 1) &&
              mc cp /data/file-to-serve minio/$S3WWW_BUCKET/file-to-serve || (echo "mc cp failed" && exit 1)
          env:
            - name: S3WWW_ENDPOINT
              value: {{ .Values.config.endpoint | quote }}
            - name: S3WWW_ACCESS_KEY
              value: {{ .Values.config.accessKey | quote }}
            - name: S3WWW_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.secretKeySecret.name }}
                  key: {{ .Values.config.secretKeySecret.key }}
            - name: S3WWW_BUCKET
              value: {{ .Values.config.bucket | quote }}
          volumeMounts:
            - name: shared-data
              mountPath: /data
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: S3WWW_ENDPOINT
              value: {{ .Values.config.endpoint | quote }}
            - name: S3WWW_ACCESS_KEY
              value: {{ .Values.config.accessKey | quote }}
            - name: S3WWW_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.secretKeySecret.name }}
                  key: {{ .Values.config.secretKeySecret.key }}
            - name: S3WWW_BUCKET
              value: {{ .Values.config.bucket | quote }}
            - name: S3WWW_ADDRESS
              value: {{ .Values.config.address | quote }}
            {{- with .Values.extraEnv }}
            {{ toYaml . | nindent 12 }}
            {{- end }}
          args:
            {{- with .Values.extraArgs}}
            {{ toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
